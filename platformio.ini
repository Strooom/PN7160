; #############################################################################
; ### PlatformIO Project Configuration File                                 ###
; #############################################################################

[platformio]
name = PN7160
description = Project for developing NXP PN7160 Driver


; #############################################################################
; ### Options - to be reused on some environments                           ###
; #############################################################################

[options]
board = teensy31

local_build_flags =
	-Wno-unknown-pragmas
	-D platformio

cloud_build_flags = 
	-Wno-unknown-pragmas

testing_build_flags = 
	-D unitTesting

test_coverage_build_flags = 
	-lgcov
    --coverage
    -fprofile-abs-path
	-O0


host_test_port = COM14
target_test_port = -D TARGET_TEST_PORT_UART1

; #############################################################################
; ### Settings Common to all environments                                   ###
; #############################################################################

[env]
lib_ldf_mode = deep


; #############################################################################
; ### Local desktop and Cloud Unittesting : ALL generic unittests           ###
; #############################################################################

[env:all_generic_unittests]
platform = native
build_flags = 
	${options.testing_build_flags}
	${options.test_coverage_build_flags}
	${options.cloud_build_flags}
	-D generic

test_framework = unity
test_filter = 
	generic/test_*

check_src_filters =  
    lib/*
    src/*
    test/*
check_flags =
	--suppress=unusedFunction

; extra_scripts = post:.github/workflows/buildcoveragereport.py
; gcovr --sort uncovered-number --sort-reverse --html-nested -e .pio* -o ./test/coverage/main.html


; #############################################################################
; ### Local desktop and Cloud Unittesting : SELECTED generic unittests      ###
; #############################################################################

[env:some_generic_unittests]
platform = native
build_flags = 
	${options.testing_build_flags}
	${options.test_coverage_build_flags}
	${options.cloud_build_flags}
	-D generic

test_framework = unity
test_filter = 
	;generic/test_general

debug_test = 		generic/test_general

; #############################################################################
; ### Local Application build                                               ###
; #############################################################################

[env:target]
platform = teensy
board = ${options.board}
framework = arduino
monitor_speed = 115200
extra_scripts = pre:.github/workflows/buildinfo.py
build_flags = 
	${options.local_build_flags}


; #############################################################################
; ### Some Target Unit Tests                                                ###
; #############################################################################

[env:some_target_unittests]
platform = teensy
board = ${options.board}
framework = arduino
build_flags = 
	${options.local_build_flags}
	${options.testing_build_flags}
	-Wno-unused-function
	${options.target_test_port}

test_framework = unity
test_port = ${options.host_test_port}

test_filter = 
	;target_no_jigs/test_vdd_enable

debug_test  = tools/test_initialize_mac


; #############################################################################
; ### All Target Unit Tests                                                ###
; #############################################################################

[env:all_target_unittests]
platform = teensy
board = ${options.board}
framework = arduino
build_flags = 
	${options.local_build_flags}
	${options.testing_build_flags}
	-Wno-unused-function
	${options.target_test_port}

test_framework = unity
test_port = ${options.host_test_port}

test_filter = 
	test_target_*
	test_generic_*


; #############################################################################
; ### Cloud Application build                                               ###
; #############################################################################

[env:production]
platform = teensy
board = ${options.board}
framework = arduino
build_flags = 
	${options.cloud_build_flags}

